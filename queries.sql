-- View All Available Properties
-- Query to list all properties that do not have any bookings during a specified date range:
SELECT property.id, property.property_name, property.city, property.state
FROM property
WHERE NOT EXISTS (
    SELECT 1
    FROM bookings
    WHERE bookings.property_id = property.id
    AND (
        (bookings.check_in_date BETWEEN '2024-06-01' AND '2024-06-10')
        OR (bookings.check_out_date BETWEEN '2024-06-01' AND '2024-06-10')
    )
);

-- Find All Bookings for a Specific Property
-- Query to retrieve all bookings for a particular property (by property ID):
SELECT bookings.id, bookings.check_in_date, bookings.check_out_date, guest.first_name, guest.last_name
FROM bookings
JOIN guest ON guest.id = bookings.guest_id
WHERE bookings.property_id = 1;

-- List Properties with Specific Amenities
-- Query to find properties that match certain amenities (e.g., properties with WiFi and a swimming pool):
SELECT property.property_name, amenities.wifi, amenities.swimming_pool
FROM property
JOIN amenities ON property.id = amenities.property_id
WHERE amenities.wifi = 'Yes' AND amenities.swimming_pool = 'Yes';

-- Calculate Total Revenue from a Property
-- Query to calculate the total revenue generated by a specific property (e.g., property ID 1):
SELECT SUM(transactions.amount_paid) AS total_revenue
FROM transactions
WHERE transactions.property_id = 1;

-- Find the Host with the Most Bookings
-- Query to find the host with the most bookings on their properties:
SELECT host.first_name, host.last_name, COUNT(bookings.id) AS total_bookings
FROM host
JOIN property ON property.host_id = host.id
JOIN bookings ON bookings.property_id = property.id
GROUP BY host.id
ORDER BY total_bookings DESC
LIMIT 1;

-- Get Reviews for a Property
-- Query to list all reviews for a specific property:
SELECT reviews.rating, reviews.comment, guest.first_name, guest.last_name
FROM reviews
JOIN guest ON guest.id = reviews.guest_id
WHERE reviews.property_id = 1;

-- Find Guests Who Have Stayed Multiple Times at the Same Property
-- Query to list guests who have booked a particular property more than once:
SELECT guest.first_name, guest.last_name, COUNT(bookings.id) AS times_booked
FROM guest
JOIN bookings ON guest.id = bookings.guest_id
WHERE bookings.property_id = 1
GROUP BY guest.id
HAVING COUNT(bookings.id) > 1;

-- Add a new guests to the guest's table
INSERT INTO guest (id, first_name, last_name, username, phone_number, email)
VALUES
(1, 'John', 'Doe', 'johndoe', '909-555-1234', 'john.doe@example.com'),
(2, 'Jane', 'Smith', 'janesmith', '987-654-3210', 'janesmith@example.com'),
(3, 'Emily', 'Johnson', 'emilyjohnson', '555-234-5678', 'emilyjohnson@example.com'),
(4, 'Emily', 'Davis', 'emilyd', '626-555-4321', 'emily.davis@example.com'),
(5, 'Daniel', 'Johnson', 'danielj', '909-555-9876', 'daniel.johnson@example.com'),
(6, 'Sarah', 'Wilson', 'sarahwilson', '123-555-6543', 'sarah.wilson@example.com'),
(7, 'David', 'Martinez', 'davidm', '909-555-3456', 'david.martinez@example.com'),
(8, 'Laura', 'Garcia', 'laurag', '626-555-7890', 'laura.garcia@example.com'),
(9, 'James', 'Anderson', 'jamesa', '456-555-2345', 'james.anderson@example.com'),
(10, 'Jessica', 'Lee', 'jessicalee', '909-555-6789', 'jessica.lee@example.com');


-- Add a new hosts to the host's table
INSERT INTO host (id, first_name, last_name, host_since, username, phone_number, email)
VALUES
(1, 'Alice', 'Miller', '2015-06-01', 'alicem', '909-555-1111', 'alice.miller@example.com'),
(2, 'Bob', 'Williams', '2017-03-15', 'bobw', '626-555-2222', 'bob.williams@example.com'),
(3, 'Charlotte', 'Moore', '2018-09-23', 'charlottem', '123-555-3333', 'charlotte.moore@example.com'),
(4, 'David', 'Taylor', '2016-11-30', 'davidt', '456-555-4444', 'david.taylor@example.com'),
(5, 'Emma', 'Thomas', '2020-01-10', 'emmat', '626-555-5555', 'emma.thomas@example.com'),
(6, 'Frank', 'Harris', '2019-07-19', 'frankh', '909-555-6666', 'frank.harris@example.com'),
(7, 'Grace', 'Clark', '2021-02-27', 'gracec', '626-555-7777', 'grace.clark@example.com'),
(8, 'Henry', 'Lewis', '2014-08-05', 'henryl', '123-555-8888', 'henry.lewis@example.com'),
(9, 'Isabella', 'Walker', '2013-12-12', 'isabellaw', '909-555-9999', 'isabella.walker@example.com'),
(10, 'Jack', 'Robinson', '2012-04-18', 'jackr', '626-555-1010', 'jack.robinson@example.com');


-- add amenitites to the amenities's table
INSERT INTO amenities (id, property_type, urban_rural_suburban, square_footage, number_of_beds, number_of_bedrooms, number_of_bathrooms, air_conditioning, wifi, pets_allowed, smoke_free, parking, laundry_facilities, swimming_pool, accessibility)
VALUES
(1, 'Apartment', 'Urban', '850', 2, 2, 1, 'Yes', 'Yes', 'No', 'Yes', 'Street', 'In-Unit', 'No', 'Wheelchair accessible elevator'),
(2, 'House', 'Suburban', '2000', 4, 3, 2, 'Yes', 'Yes', 'Yes', 'Yes', 'Garage', 'In-Unit', 'Yes', 'Ground floor entrance'),
(3, 'Cabin', 'Rural', '1200', 3, 2, 1, 'No', 'No', 'Yes', 'No', 'On-site', 'Washer only', 'No', 'None'),
(4, 'Condo', 'Urban', '950', 2, 2, 2, 'Yes', 'Yes', 'No', 'Yes', 'Reserved', 'In-Unit', 'Yes', 'Elevator, Braille signage'),
(5, 'Villa', 'Suburban', '3500', 5, 4, 4, 'Yes', 'Yes', 'Yes', 'Yes', 'Garage', 'In-Unit', 'Yes', 'Accessible ramp'),
(6, 'Studio', 'Urban', '500', 1, 1, 1, 'Yes', 'Yes', 'No', 'Yes', 'Street', 'Shared', 'No', 'Elevator'),
(7, 'Cottage', 'Rural', '700', 2, 2, 1, 'No', 'No', 'Yes', 'Yes', 'On-site', 'Shared', 'No', 'None'),
(8, 'Penthouse', 'Urban', '1500', 3, 3, 2, 'Yes', 'Yes', 'No', 'Yes', 'Reserved', 'In-Unit', 'Yes', 'Elevator, Wide doorways'),
(9, 'Farmhouse', 'Rural', '2500', 4, 4, 3, 'No', 'No', 'Yes', 'No', 'On-site', 'Washer and dryer', 'No', 'Ground floor entrance'),
(10, 'Townhouse', 'Suburban', '1800', 3, 3, 2, 'Yes', 'Yes', 'Yes', 'Yes', 'Garage', 'In-Unit', 'No', 'None');


-- add property information to the property's table
INSERT INTO property (id, host_id, amenities_id, property_name, street_number, street, city, state, zip_code, country)
VALUES
(1, 1, 1, 'Central Park Apartment', '123', 'Main St', 'New York', 'NY', '10022', 'USA'),
(2, 2, 2, 'Golden Gate House', '456', 'Elm St', 'San Francisco', 'CA', '94110', 'USA'),
(3, 3, 3, 'Blue Ridge Cabin', '789', 'Oak St', 'Asheville', 'NC', '28803', 'USA'),
(4, 4, 4, 'Millennium Park Condo', '321', 'Maple St', 'Chicago', 'IL', '60605', 'USA'),
(5, 5, 5, 'Downtown Orlando Villa', '654', 'Cedar St', 'Orlando', 'FL', '32801', 'USA'),
(6, 6, 6, 'Seattle Studio', '987', 'Birch St', 'Seattle', 'WA', '98101', 'USA'),
(7, 7, 7, 'Nashville Cottage', '123', 'Pine St', 'Nashville', 'TN', '37201', 'USA'),
(8, 8, 8, 'Miami Penthouse', '456', 'Spruce St', 'Miami', 'FL', '33101', 'USA'),
(9, 9, 9, 'Austin Farmhouse', '789', 'Maple St', 'Austin', 'TX', '73301', 'USA'),
(10, 10, 10, 'Hollywood Townhouse', '321', 'Willow St', 'Los Angeles', 'CA', '90028', 'USA');


-- add transaction information to the transaction's table
INSERT INTO transactions (id, guest_id, property_id, billing_address, payment_type, payment_date, amount_paid)
VALUES
(1, 1, 1, '123 Main St, New York, NY 10022, USA', 'Credit Card', '2023-08-01', 350.00),
(2, 2, 2, '456 Elm St, San Francisco, CA 94110, USA', 'PayPal', '2023-07-15', 1200.00),
(3, 3, 3, '789 Oak St, Asheville, NC 28803, USA', 'Credit Card', '2023-08-20', 600.00),
(4, 4, 4, '321 Maple St, Chicago, IL 60605, USA', 'Bank Transfer', '2023-09-05', 900.00),
(5, 5, 5, '654 Cedar St, Orlando, FL 32801, USA', 'Credit Card', '2023-09-10', 2000.00),
(6, 6, 6, '987 Birch St, Seattle, WA 98101, USA', 'Credit Card', '2023-09-15', 300.00),
(7, 7, 7, '123 Pine St, Nashville, TN 37201, USA', 'Credit Card', '2023-09-20', 800.00),
(8, 8, 8, '456 Spruce St, Miami, FL 33101, USA', 'PayPal', '2023-09-25', 1500.00),
(9, 9, 9, '789 Maple St, Austin, TX 73301, USA', 'Bank Transfer', '2023-09-30', 1000.00),
(10, 10, 10, '321 Willow St, Los Angeles, CA 90028, USA', 'Credit Card', '2023-10-01', 1800.00);


-- add reviews to the review's table
INSERT INTO reviews (id, guest_id, property_id, rating, comments)
VALUES
(1, 1, 1, 5, 'Great apartment with a fantastic view of Central Park.'),
(2, 2, 2, 4, 'Very comfortable house in a nice neighborhood.'),
(3, 3, 3, 3, 'Cozy cabin, but a bit too remote for my taste.'),
(4, 4, 4, 4, 'Nice condo, close to Millennium Park.'),
(5, 5, 5, 5, 'Amazing villa with plenty of space and amenities.'),
(6, 6, 6, 3, 'Small studio, but it had everything I needed.'),
(7, 7, 7, 4, 'Charming cottage, good for a relaxing getaway.'),
(8, 8, 8, 5, 'Luxurious penthouse with excellent amenities.'),
(9, 9, 9, 4, 'Spacious farmhouse with a lovely garden.'),
(10, 10, 10, 5, 'Beautiful townhouse, very close to Hollywood attractions.');


-- add bookings to the bookings table
INSERT INTO bookings (id, guest_id, property_id, check_in_date, check_out_date)
VALUES
(1, 1, 1, '2023-08-01', '2023-08-07'),
(2, 2, 2, '2023-07-10', '2023-07-20'),
(3, 3, 3, '2023-08-15', '2023-08-25'),
(4, 4, 4, '2023-09-01', '2023-09-10'),
(5, 5, 5, '2023-09-12', '2023-09-20'),
(6, 6, 6, '2023-09-16', '2023-09-22'),
(7, 7, 7, '2023-09-18', '2023-09-23'),
(8, 8, 8, '2023-09-26', '2023-10-02'),
(9, 9, 9, '2023-10-01', '2023-10-07'),
(10, 10, 10, '2023-10-05', '2023-10-12');


-- updating the transactions table
UPDATE "transactions" SET "amount_paid" = (SELECT ("weekday_rate"*"number_weekday_nights") +
                                                 ("weekend_rate"*"number_weekend_nights") +
                                                 ("person_add_on_price"*("number_of_people"-1)) +
                                                 ("tax_rate"*("weekday_rate"*"number_weekday_nights" +
                                                 "weekend_rate"*"number_weekend_nights" +
                                                 "person_add_on_price"*("number_of_people"-1)))
FROM "transactions"
JOIN "room_rates" ON "transactions"."property_id" = "room_rates"."property_id"
WHERE "transactions"."property_id" = 1)
WHERE "transactions"."property_id" = 1;
